{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"../TouchableOpacity\"));\n\nvar _Text = _interopRequireDefault(require(\"../Text\"));\n\nvar Button = React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return React.createElement(_TouchableOpacity.default, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, React.createElement(_Text.default, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\n\nvar styles = _StyleSheet.default.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\n\nvar _default = Button;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/danie/Cen4010/project/node_modules/react-native-web/dist/exports/Button/index.js"],"names":["Button","React","forwardRef","props","forwardedRef","accessibilityLabel","color","disabled","onPress","testID","title","createElement","TouchableOpacity","accessibilityRole","focusable","ref","style","styles","button","backgroundColor","buttonDisabled","Text","text","textDisabled","displayName","StyleSheet","create","borderRadius","fontWeight","padding","textAlign","textTransform"],"mappings":";;;;;;;;;AASA;;AACA;;AACA;;AACA;;AACA,IAAIA,MAAM,GAEVC,KAAK,CAACC,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,YAAjB,EAA+B;AAC9C,MAAIC,kBAAkB,GAAGF,KAAK,CAACE,kBAA/B;AAAA,MACIC,KAAK,GAAGH,KAAK,CAACG,KADlB;AAAA,MAEIC,QAAQ,GAAGJ,KAAK,CAACI,QAFrB;AAAA,MAGIC,OAAO,GAAGL,KAAK,CAACK,OAHpB;AAAA,MAIIC,MAAM,GAAGN,KAAK,CAACM,MAJnB;AAAA,MAKIC,KAAK,GAAGP,KAAK,CAACO,KALlB;AAMA,SAEET,KAAK,CAACU,aAAN,CAAoBC,yBAApB,EAAsC;AACpCP,IAAAA,kBAAkB,EAAEA,kBADgB;AAEpCQ,IAAAA,iBAAiB,EAAE,QAFiB;AAGpCN,IAAAA,QAAQ,EAAEA,QAH0B;AAIpCO,IAAAA,SAAS,EAAE,CAACP,QAJwB;AAKpCC,IAAAA,OAAO,EAAEA,OAL2B;AAMpCO,IAAAA,GAAG,EAAEX,YAN+B;AAOpCY,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACC,MAAR,EAAgBZ,KAAK,IAAI;AAC9Ba,MAAAA,eAAe,EAAEb;AADa,KAAzB,EAEJC,QAAQ,IAAIU,MAAM,CAACG,cAFf,CAP6B;AAUpCX,IAAAA,MAAM,EAAEA;AAV4B,GAAtC,EAaAR,KAAK,CAACU,aAAN,CAAoBU,aAApB,EAA0B;AACxBL,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACK,IAAR,EAAcf,QAAQ,IAAIU,MAAM,CAACM,YAAjC;AADiB,GAA1B,EAEGb,KAFH,CAbA,CAFF;AAmBD,CA1BD,CAFA;AA6BAV,MAAM,CAACwB,WAAP,GAAqB,QAArB;;AACA,IAAIP,MAAM,GAAGQ,oBAAWC,MAAX,CAAkB;AAC7BR,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,SADX;AAENQ,IAAAA,YAAY,EAAE;AAFR,GADqB;AAK7BL,EAAAA,IAAI,EAAE;AACJhB,IAAAA,KAAK,EAAE,MADH;AAEJsB,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,aAAa,EAAE;AALX,GALuB;AAY7BX,EAAAA,cAAc,EAAE;AACdD,IAAAA,eAAe,EAAE;AADH,GAZa;AAe7BI,EAAAA,YAAY,EAAE;AACZjB,IAAAA,KAAK,EAAE;AADK;AAfe,CAAlB,CAAb;;eAmBeN,M","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport TouchableOpacity from '../TouchableOpacity';\nimport Text from '../Text';\nvar Button =\n/*#__PURE__*/\nReact.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return (\n    /*#__PURE__*/\n    React.createElement(TouchableOpacity, {\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      disabled: disabled,\n      focusable: !disabled,\n      onPress: onPress,\n      ref: forwardedRef,\n      style: [styles.button, color && {\n        backgroundColor: color\n      }, disabled && styles.buttonDisabled],\n      testID: testID\n    },\n    /*#__PURE__*/\n    React.createElement(Text, {\n      style: [styles.text, disabled && styles.textDisabled]\n    }, title))\n  );\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;"]},"metadata":{},"sourceType":"script"}