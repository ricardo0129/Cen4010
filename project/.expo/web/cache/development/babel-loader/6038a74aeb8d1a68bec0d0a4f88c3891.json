{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\n\nvar _css = _interopRequireDefault(require(\"../StyleSheet/css\"));\n\nvar forwardedProps = _interopRequireWildcard(require(\"../../modules/forwardedProps\"));\n\nvar _pick = _interopRequireDefault(require(\"../../modules/pick\"));\n\nvar _useElementLayout = _interopRequireDefault(require(\"../../modules/useElementLayout\"));\n\nvar _useLayoutEffect = _interopRequireDefault(require(\"../../modules/useLayoutEffect\"));\n\nvar _useMergeRefs = _interopRequireDefault(require(\"../../modules/useMergeRefs\"));\n\nvar _usePlatformMethods = _interopRequireDefault(require(\"../../modules/usePlatformMethods\"));\n\nvar _useResponderEvents = _interopRequireDefault(require(\"../../modules/useResponderEvents\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\n\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, forwardedProps.defaultProps), forwardedProps.accessibilityProps), forwardedProps.clickProps), forwardedProps.focusProps), forwardedProps.keyboardProps), forwardedProps.mouseProps), forwardedProps.touchProps), forwardedProps.styleProps), {}, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return (0, _pick.default)(props, forwardPropsList);\n};\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput = (0, _react.forwardRef)(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = (0, _react.useRef)({\n    height: null,\n    width: null\n  });\n  var hostRef = (0, _react.useRef)(null);\n  var handleContentSizeChange = (0, _react.useCallback)(function () {\n    var node = hostRef.current;\n\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = (0, _react.useMemo)(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && _TextInputState.default.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    _TextInputState.default._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var node = hostRef.current;\n\n    if (node != null) {\n      _TextInputState.default._currentlyFocusedNode = node;\n\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        setTimeout(function () {\n          node.select();\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  (0, _useLayoutEffect.default)(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      _TextInputState.default._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n\n  var style = _StyleSheet.default.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n\n  (0, _useElementLayout.default)(hostRef, onLayout);\n  (0, _useResponderEvents.default)(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList;\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = (0, _usePlatformMethods.default)(supportedProps);\n  var setRef = (0, _useMergeRefs.default)(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return (0, _createElement.default)(component, supportedProps);\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = _TextInputState.default;\n\nvar classes = _css.default.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\n\nvar _default = TextInput;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Julian/Desktop/Project_Repository/Cen4010/project/node_modules/react-native-web/dist/exports/TextInput/index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","forwardedProps","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","type","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","TextInput","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","height","width","hostRef","handleContentSizeChange","current","newHeight","scrollHeight","newWidth","scrollWidth","contentSize","imperativeRef","hostNode","clear","isFocused","TextInputState","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","handleChange","handleFocus","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","classList","classes","textinput","style","StyleSheet","compose","supportedProps","undefined","enterKeyHint","onKeyDown","onSelect","platformMethodsRef","setRef","ref","displayName","State","css","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { forwardRef, useCallback, useMemo, useRef } from 'react';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, forwardedProps.defaultProps), forwardedProps.accessibilityProps), forwardedProps.clickProps), forwardedProps.focusProps), forwardedProps.keyboardProps), forwardedProps.mouseProps), forwardedProps.touchProps), forwardedProps.styleProps), {}, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput =\n/*#__PURE__*/\nforwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = useRef(null);\n  var handleContentSizeChange = useCallback(function () {\n    var node = hostRef.current;\n\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = useMemo(function () {\n    return function (hostNode) {\n      // TextInput needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `TextInput.clear(hostRef)` is added to React Native.\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var node = hostRef.current;\n\n    if (node != null) {\n      TextInputState._currentlyFocusedNode = node;\n\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        setTimeout(function () {\n          node.select();\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Prevent key events bubbling (see #612)\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;"]},"metadata":{},"sourceType":"script"}